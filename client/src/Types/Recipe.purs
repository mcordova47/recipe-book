-- File auto generated by purescript-bridge! --
module Types.Recipe where

import Data.Argonaut (class DecodeJson, decodeJson, (.:))
import Data.Argonaut.Decode.Generic.Rep (genericDecodeJson)
import Data.Lens (Iso', Prism', prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Prim (Array, Int, Number, String)
import Types.Measurement (Measurement)

import Prelude
import Data.Generic.Rep (class Generic)

newtype FoodId =
    FoodId Int

derive instance eqFoodId :: Eq FoodId
derive instance genericFoodId :: Generic FoodId _
derive instance newtypeFoodId :: Newtype FoodId _

instance decodeJsonFoodId :: DecodeJson FoodId where
  decodeJson = genericDecodeJson

--------------------------------------------------------------------------------
_FoodId :: Iso' FoodId Int
_FoodId = _Newtype
--------------------------------------------------------------------------------
newtype Ingredient =
    Ingredient {
      id :: FoodId
    , name :: String
    , unitCost :: Number
    , unitType :: Measurement
    , amount :: Number
    , cupsToLbs :: Maybe Number
    }

derive instance eqIngredient :: Eq Ingredient
derive instance genericIngredient :: Generic Ingredient _
derive instance newtypeIngredient :: Newtype Ingredient _

instance decodeJsonIngredient :: DecodeJson Ingredient where
  decodeJson = genericDecodeJson

--------------------------------------------------------------------------------
_Ingredient :: Iso' Ingredient { id :: FoodId, name :: String, unitCost :: Number, unitType :: Measurement, amount :: Number, cupsToLbs :: Maybe Number}
_Ingredient = _Newtype

--------------------------------------------------------------------------------
newtype IngredientAmount =
    IngredientAmount {
      ingredient :: RecipeComponent
    , amount :: Number
    , unitType :: Measurement
    }

derive instance eqIngredientAmount :: Eq IngredientAmount
derive instance genericIngredientAmount :: Generic IngredientAmount _
derive instance newtypeIngredientAmount :: Newtype IngredientAmount _

instance decodeJsonIngredientAmount :: DecodeJson IngredientAmount where
  decodeJson = genericDecodeJson

--------------------------------------------------------------------------------
_IngredientAmount :: Iso' IngredientAmount { ingredient :: RecipeComponent, amount :: Number, unitType :: Measurement}
_IngredientAmount = _Newtype

--------------------------------------------------------------------------------
newtype Recipe =
    Recipe {
      id :: FoodId
    , name :: String
    , category :: String
    , ingredients :: Array IngredientAmount
    , unitType :: Measurement
    , amount :: Number
    , directions :: String
    , cupsToLbs :: Maybe Number
    }

derive instance eqRecipe :: Eq Recipe
derive instance genericRecipe :: Generic Recipe _
derive instance newtypeRecipe :: Newtype Recipe _

instance decodeJsonRecipe :: DecodeJson Recipe where
  decodeJson json = do
    o <- decodeJson json
    id <- FoodId <$> o .: "id"
    name <- o .: "name"
    category <- o .: "category"
    ingredients <- o .: "ingredients"
    unitType <- o .: "unitType"
    amount <- o .: "amount"
    directions <- o .: "directions"
    cupsToLbs <- o .: "cupsToLbs"
    pure $ Recipe
      { id
      , name
      , category
      , ingredients
      , unitType
      , amount
      , directions
      , cupsToLbs
      }


--------------------------------------------------------------------------------
_Recipe :: Iso' Recipe { id :: FoodId, name :: String, category :: String, ingredients :: Array IngredientAmount, unitType :: Measurement, amount :: Number, directions :: String, cupsToLbs :: Maybe Number}
_Recipe = _Newtype

--------------------------------------------------------------------------------
data RecipeComponent =
    IngredientComp Ingredient
  | RecipeComp Recipe

derive instance eqRecipeComponent :: Eq RecipeComponent
derive instance genericRecipeComponent :: Generic RecipeComponent _

instance decodeJsonRecipeComponent :: DecodeJson RecipeComponent where
  decodeJson = genericDecodeJson

--------------------------------------------------------------------------------
_IngredientComp :: Prism' RecipeComponent Ingredient
_IngredientComp = prism' IngredientComp f
  where
    f (IngredientComp a) = Just $ a
    f _ = Nothing

_RecipeComp :: Prism' RecipeComponent Recipe
_RecipeComp = prism' RecipeComp f
  where
    f (RecipeComp a) = Just $ a
    f _ = Nothing

--------------------------------------------------------------------------------
